{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gupta\\\\OneDrive\\\\Desktop\\\\Sharpener\\\\sharpenerProjects\\\\FrontEnd\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Expenses(props) {\n  _s();\n  const [selectedYear, setFilteredYear] = useState(\"2020\");\n  // const [expenses, setFilteredExpenses] = useState(props.items);\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n\n    // //filter the array according to the entered year\n    // const filterdArray = props.items.filter((item) => {\n    //   return item.date.getFullYear() === parseInt(selectedYear);\n    // });\n\n    // //now send the filterd array via state to be displayed\n    // setFilteredExpenses(filterdArray);\n  };\n\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === selectedYear;\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: selectedYear,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), filteredExpenses.map(expense => {\n      return /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Expenses, \"tY8BJKctffy3FPvx+5z5qmeMTJY=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","Card","ExpensesFilter","jsxDEV","_jsxDEV","Expenses","props","_s","selectedYear","setFilteredYear","filterChangeHandler","filteredExpenses","items","filter","expense","date","getFullYear","toString","className","children","selected","onChangeFilter","fileName","_jsxFileName","lineNumber","columnNumber","map","title","amount","id","_c","$RefreshReg$"],"sources":["C:/Users/gupta/OneDrive/Desktop/Sharpener/sharpenerProjects/FrontEnd/01-starting-setup/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\n\r\nfunction Expenses(props) {\r\n  const [selectedYear, setFilteredYear] = useState(\"2020\");\r\n  // const [expenses, setFilteredExpenses] = useState(props.items);\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n\r\n    // //filter the array according to the entered year\r\n    // const filterdArray = props.items.filter((item) => {\r\n    //   return item.date.getFullYear() === parseInt(selectedYear);\r\n    // });\r\n\r\n    // //now send the filterd array via state to be displayed\r\n    // setFilteredExpenses(filterdArray);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter(expense => {\r\n    return expense.date.getFullYear().toString() === selectedYear;\r\n  })\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={selectedYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      ></ExpensesFilter>\r\n\r\n      {filteredExpenses.map((expense) => {\r\n        return (\r\n          <ExpenseItem\r\n            title={expense.title}\r\n            amount={expense.amount}\r\n            date={expense.date}\r\n            key={expense.id}\r\n          />\r\n        );\r\n      })}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,gBAAgB;AACvB,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;EACxD;;EAEA,MAAMW,mBAAmB,GAAIF,YAAY,IAAK;IAC5CC,eAAe,CAACD,YAAY,CAAC;;IAE7B;IACA;IACA;IACA;;IAEA;IACA;EACF,CAAC;;EAED,MAAMG,gBAAgB,GAAGL,KAAK,CAACM,KAAK,CAACC,MAAM,CAACC,OAAO,IAAI;IACrD,OAAOA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKT,YAAY;EAC/D,CAAC,CAAC;EAEF,oBACEJ,OAAA,CAACH,IAAI;IAACiB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACxBf,OAAA,CAACF,cAAc;MACbkB,QAAQ,EAAEZ,YAAa;MACvBa,cAAc,EAAEX;IAAoB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,EAEjBd,gBAAgB,CAACe,GAAG,CAAEZ,OAAO,IAAK;MACjC,oBACEV,OAAA,CAACJ,WAAW;QACV2B,KAAK,EAAEb,OAAO,CAACa,KAAM;QACrBC,MAAM,EAAEd,OAAO,CAACc,MAAO;QACvBb,IAAI,EAAED,OAAO,CAACC;MAAK,GACdD,OAAO,CAACe,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC;IAEN,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX;AAAClB,EAAA,CAvCQF,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAyCjB,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}